diff --git a/c++_lesson/task1/src/matrix/matrix.h b/c++_lesson/task1/src/matrix/matrix.h
index 5a08a2c..79629e3 100644
--- a/c++_lesson/task1/src/matrix/matrix.h
+++ b/c++_lesson/task1/src/matrix/matrix.h
@@ -1,7 +1,6 @@
 #ifndef MATRIX_H
 #define MATRIX_H
 #include <iostream>
-
 /**************
    A class that creates an matrix object,
    which dimensions can not be changed during the object lifetime.
@@ -9,27 +8,29 @@
 class Matrix
 {
 public:
-	Matrix(const int, const int);	//overloaded constructor that creates a matrix with  ROWxCOL dimensions,
+	Matrix(const int, const int);
 	Matrix(const Matrix&);
-	void set_value(int, int, double);	//changes the value of a specified element,
-	//double operator[](const int&)[] const;
-	//const double operator[](const int)[];
-    Matrix& operator = (const Matrix&);
-    bool operator == (const Matrix&) const;
-	Matrix& operator - ();		        //converts the elements of the matrix to the opposite sign,
-	Matrix& operator * (const Matrix&);     //scalar product of two matrices,
-	Matrix& operator *= (Matrix const&);	//scalar product of two matrices via assignment to the first matrix,
-	Matrix& operator + (const Matrix&);
+	double* operator[](const int);
+	bool check_dimensions_of_matrix(const std::string&);
+   	Matrix& operator = (const Matrix&);
+   	bool operator == (const Matrix&) const;
+	Matrix& operator - ();
+	Matrix operator * (const Matrix&);
+	Matrix& operator *= (Matrix const&);
+	Matrix operator + (const Matrix&);
 	Matrix& operator += (Matrix const&);
-	Matrix& operator - (const Matrix&);
+	Matrix operator - (const Matrix&);
 	Matrix& operator -= (Matrix const&);
-    Matrix& operator * (const double&);	//performs multiplication of the matrix with given  number on the right,
-	friend Matrix& operator * (const double&, const Matrix&);    //performs multiplication of the matrix with given  number on the left,
-	friend std::istream& operator>>(std::istream&, Matrix&);     //reads the data from the file, performs validations and fills the matrix in case of correctness
-	friend std::ostream& operator<<(std::ostream&, Matrix&);     //print the content of the matrix and saves it to the file.
-    ~Matrix();
+   	Matrix& operator * (const double&);
+	friend Matrix operator * (const double&, const Matrix&);
+	friend std::istream& operator>>(std::istream&, Matrix&);
+	friend std::ostream& operator<<(std::ostream&, Matrix&);
+        ~Matrix();
 private:
-	double **data;
+	static void check_double(const std::string&, double&);
+	static std::string rand_filename();
+private:
+	double** data;
 	int rows;
 	int cols;
 };
